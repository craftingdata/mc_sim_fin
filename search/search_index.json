{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation Notice Danger This software is for educational purposes only. Do not risk money which you are afraid to lose. USE THE SOFTWARE AT YOUR OWN RISK. THE AUTHORS AND ALL AFFILIATES ASSUME NO RESPONSIBILITY FOR YOUR TRADING RESULTS. Who's for The target is algorithmic traders that want to make further analysis on their backtest results. Features As an algorithmic trader I want to know what's my risk of ruin on 1 year of trading so that I can manage the risk. As an algorithmic trader I want to know the median drawdown on 1 year of trading so that I can expect as reference drawdown from my bot. As an algorithmic trader I want to know the median return on 1 year of trading so that I can expect as reference gain from my bot. As an algorithmic trader I want to know the probability that the bot make profit during the first year so that I can be patient. Requirements Python >= 3.7 numpy pandas","title":"Documentation"},{"location":"#documentation","text":"","title":"Documentation"},{"location":"#notice","text":"Danger This software is for educational purposes only. Do not risk money which you are afraid to lose. USE THE SOFTWARE AT YOUR OWN RISK. THE AUTHORS AND ALL AFFILIATES ASSUME NO RESPONSIBILITY FOR YOUR TRADING RESULTS.","title":"Notice"},{"location":"#whos-for","text":"The target is algorithmic traders that want to make further analysis on their backtest results.","title":"Who's for"},{"location":"#features","text":"As an algorithmic trader I want to know what's my risk of ruin on 1 year of trading so that I can manage the risk. As an algorithmic trader I want to know the median drawdown on 1 year of trading so that I can expect as reference drawdown from my bot. As an algorithmic trader I want to know the median return on 1 year of trading so that I can expect as reference gain from my bot. As an algorithmic trader I want to know the probability that the bot make profit during the first year so that I can be patient.","title":"Features"},{"location":"#requirements","text":"Python >= 3.7 numpy pandas","title":"Requirements"},{"location":"api/","text":"mc_sim_fin.mc.mc_analysis mc_sim_fin.mc.mc_analysis(results: DataFrame, start_equity: float,ruin_equity: float, **kwargs) Type name:Type Informations param1 results: DataFrame first column of the dataframe has to be the date of the trade and second the profit param2 start_equity: float the equity you start trading with param3 ruin_equity: float the equity you consider as a ruin opt_param sim_years_duration:float the duration of the simulation in years opt_param nb_iterations:int the number of iterations return :Dict the result of the simulation","title":"API"},{"location":"api/#mc_sim_finmcmc_analysis","text":"","title":"mc_sim_fin.mc.mc_analysis"},{"location":"api/#mc_sim_finmcmc_analysisresults-dataframe-start_equity-floatruin_equity-float-kwargs","text":"Type name:Type Informations param1 results: DataFrame first column of the dataframe has to be the date of the trade and second the profit param2 start_equity: float the equity you start trading with param3 ruin_equity: float the equity you consider as a ruin opt_param sim_years_duration:float the duration of the simulation in years opt_param nb_iterations:int the number of iterations return :Dict the result of the simulation","title":"mc_sim_fin.mc.mc_analysis(results: DataFrame, start_equity: float,ruin_equity: float, **kwargs)"},{"location":"developper_guide/","text":"developper guide Note If you use visual studio code and docker you can easily setup a development environment Developing inside a Container . Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Please cover your code by tests and run : pytest --cov=./ --flake8 You can build your dev image thanks to the Dockerfile.dev.","title":"Developper Guide"},{"location":"developper_guide/#developper-guide","text":"Note If you use visual studio code and docker you can easily setup a development environment Developing inside a Container . Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Please cover your code by tests and run : pytest --cov=./ --flake8 You can build your dev image thanks to the Dockerfile.dev.","title":"developper guide"},{"location":"getting_started/","text":"Getting started How to install Use the package manager pip to install montecarlo simulation finance. pip install mc-sim-fin How to use from mc_sim_fin.mc import mc_analysis #extract the date and the profit from your backtest results backtest_for_mc_sim = backtest_results [[ 'date' , 'profit' ]] \"\"\" provide the equity you start with and the equity you consider as ruin (it will simulate 1 year of trading with 10 000 iterations) \"\"\" start_equity = 5000 ruin_equity = 4000 mc_sims_results = mc_analysis ( backtest_for_mc_sim , start_equity , ruin_equity ) print ( mc_sims_results ) # print output { 'risk_of_ruin_percent' : 0.156 , 'med_max_drawdown_percent' : 0.36 , 'med_profit_percent' : 1.83 , 'prob_profit_is_positive' : 0.9979 } You need to simulate more than 1 year and more/less iterations ? Go to the API doc page","title":"Getting started"},{"location":"getting_started/#getting-started","text":"","title":"Getting started"},{"location":"getting_started/#how-to-install","text":"Use the package manager pip to install montecarlo simulation finance. pip install mc-sim-fin","title":"How to install"},{"location":"getting_started/#how-to-use","text":"from mc_sim_fin.mc import mc_analysis #extract the date and the profit from your backtest results backtest_for_mc_sim = backtest_results [[ 'date' , 'profit' ]] \"\"\" provide the equity you start with and the equity you consider as ruin (it will simulate 1 year of trading with 10 000 iterations) \"\"\" start_equity = 5000 ruin_equity = 4000 mc_sims_results = mc_analysis ( backtest_for_mc_sim , start_equity , ruin_equity ) print ( mc_sims_results ) # print output { 'risk_of_ruin_percent' : 0.156 , 'med_max_drawdown_percent' : 0.36 , 'med_profit_percent' : 1.83 , 'prob_profit_is_positive' : 0.9979 } You need to simulate more than 1 year and more/less iterations ? Go to the API doc page","title":"How to use"}]}